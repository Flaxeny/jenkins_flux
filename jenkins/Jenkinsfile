pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') 
        GIT_CREDENTIALS = credentials('github-token') 
        
        DOCKER_IMAGE_NAME = "Flaxen/fastapi-app" 
        GIT_REPO_URL = "https://github.com/Flaxeny/jenkins_flux.git"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master', url: "${env.GIT_REPO_URL}"
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    def commitHash = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    def dockerImageTag = "${env.DOCKER_IMAGE_NAME}:${commitHash}"
                    
                    sh "docker build -t ${dockerImageTag} ./app"
                    sh "echo ${env.DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${env.DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                    sh "docker push ${dockerImageTag}"
                }
            }
        }

        stage('Update & Commit Manifest') {
            steps {
                script {
                    def commitHash = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    def dockerImageTag = "${env.DOCKER_IMAGE_NAME}:${commitHash}"
                    
                    sh "yq e '.spec.template.spec.containers[0].image = \"${dockerImageTag}\"' -i k8s/base/fastapi-app/deployment.yaml"
                    
                    sh "git config --global user.email 'romskor11@gmail.com'"
                    sh "git config --global user.name 'romskor'"
                    sh "git add k8s/base/fastapi-app/deployment.yaml"
                    sh "git commit -m 'ci: update image to ${dockerImageTag}'"
                    
                    sh "git push https://x-access-token:${env.GIT_CREDENTIALS}@github.com/Flaxeny/jenkins_flux.git HEAD:master"
                }
            }
        }
    }
}

